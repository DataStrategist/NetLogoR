% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agentset-functions.R
\docType{methods}
\name{inRadius}
\alias{inRadius}
\alias{inRadius,SpatialPointsDataFrame,numeric,SpatialPointsDataFrame,NLworlds-method}
\alias{inRadius,SpatialPointsDataFrame,numeric,matrix,NLworlds-method}
\alias{inRadius,matrix,numeric,SpatialPointsDataFrame,NLworlds-method}
\alias{inRadius,matrix,numeric,matrix,NLworlds-method}
\title{In radius}
\usage{
inRadius(agents1, radius, agents2, world, torus = FALSE)

\S4method{inRadius}{matrix,numeric,matrix,NLworlds}(agents1, radius, agents2,
  world, torus = FALSE)

\S4method{inRadius}{matrix,numeric,SpatialPointsDataFrame,NLworlds}(agents1,
  radius, agents2, world, torus = FALSE)

\S4method{inRadius}{SpatialPointsDataFrame,numeric,matrix,NLworlds}(agents1,
  radius, agents2, world, torus = FALSE)


  \S4method{inRadius}{SpatialPointsDataFrame,numeric,SpatialPointsDataFrame,NLworlds}(agents1,
  radius, agents2, world, torus = FALSE)
}
\arguments{
\item{agents1}{A matrix (ncol = 2) with the first column \code{pxcor} and the
second column \code{pycor} representing the coordinates for the
patch(es) from which the \code{radius} distance(s) is/are calculared
to select agent(s) from \code{agents2}.
A SpatialPointsDataFrame created by \code{createTurtles()} or by
\code{createOTurtles()} representing the turtle(s) from which the
\code{radius} distance(s) is/are calculared to select agent(s) from
\code{agents2}.}

\item{radius}{Numeric. The distance(s) from \code{agents1} to locate agents from
\code{agents2}. Must be of length 1 or of length \code{agent1}.}

\item{agents2}{A matrix (ncol = 2) with the first column \code{pxcor} and the
second column \code{pycor} representing the coordinates for the
patch(es) to which the \code{radius} distance(s) is/are calculared
from \code{agents1}.
A SpatialPointsDataFrame created by \code{createTurtles()} or by
\code{createOTurtles()} representing the turtle(s) to which the
\code{radius} distance(s) is/are calculared from \code{agents1}.}

\item{world}{A \code{NLworlds} object representing the world where the agents
are located.}

\item{torus}{Logical to determine if the \code{NLworlds} object is wrapped.
Default is \code{torus = FALSE}.}
}
\value{
A list of length equal to \code{nrow(agents1)} if \code{agents1} are patches
        or equal to \code{length(agents1)} if \code{agents1} are turtles.
        List items are either matrices (ncol = 2) with the first column \code{pxcor}
        and the second column \code{pycor} representing the coordinates of the
        patch(es) within \code{radius} distance(s) for each \code{agents1} if
        \code{agents2} are patches, or SpatialPointsDataFrame objects representing
        the turtle(s) within \code{radius} distance(s) for each \code{agents1} if
        \code{agents2} are turtles.
}
\description{
Reports the patch(es) or turtle(s) from \code{agents2} within given distance(s)
of each patch or turtle from \code{agents1}.
}
\details{
Distances from and to patches are calculated from/to their center.
         If \code{torus = TRUE}, the \code{radius} distance(s) are calculared
         around the sides of the world to select \code{agents2}.
}
\examples{
# Patches
w1 <- createNLworld(minPxcor = 0, maxPxcor = 4, minPycor = 0, maxPycor = 4)
p1 <- inRadius(agents1 = patch(world = w1, xcor = 0, ycor = 0), radius = 2, agents2 = patches(world = w1), world = w1)

# Turtles
t1 <- createTurtles(n = 10, coords = randomXYcor(world = w1, n = 10))
t2 <- inRadius(agents1 = patch(world = w1, xcor = 0, ycor = 0), radius = 2, agents2 = t1, world = w1)
t3 <- inRadius(agents1 = t1, radius = 2, agents2 = patches(w1), world = w1)
t4 <- inRadius(agents1 = turtle(turtles = t1, who = 0), radius = 2, agents2 = t1, world = w1)


}
\author{
Sarah Bauduin
}
\references{
Wilensky, U. 1999. NetLogo. http://ccl.northwestern.edu/netlogo/.
            Center for Connected Learning and Computer-Based Modeling,
            Northwestern University. Evanston, IL.
}

