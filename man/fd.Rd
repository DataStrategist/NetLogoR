% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/turtle-functions.R
\docType{methods}
\name{fd}
\alias{fd}
\alias{fd,NLworlds,SpatialPointsDataFrame,numeric-method}
\title{Forward}
\usage{
fd(world, turtles, step, torus = FALSE, out = TRUE)

\S4method{fd}{NLworlds,SpatialPointsDataFrame,numeric}(world, turtles, step,
  torus = FALSE, out = TRUE)
}
\arguments{
\item{world}{A \code{NLworlds} object, representing the world which the
turtles move onto.}

\item{turtles}{A SpatialPointsDataFrame created by \code{createTurtles()} or
by \code{createOTurtles()} representing the moving turtles.}

\item{step}{Numeric. Distance(s) by which the turtles will move forward. Must
be of length 1 if all turtles move the same distance or of length
\code{turtles} if each turtle moves a different distance.}

\item{torus}{Logical to determine if the \code{NLworlds} object is wrapped.
Default is \code{torus = FALSE}.}

\item{out}{Logical. Determine if turtles should move at all when
\code{torus = FALSE} and their ending position will be outside of
the world's extent. Default is \code{out = TRUE}.}
}
\value{
A SpatialPointsDataFrame representing the moving turtles with updated
        coordinates and updated data for their previous coordinates (i.e.,
        \code{turtles@data$prevX} and \code{turtles@data$prevY}).
}
\description{
Move the turtles forward of \code{step} distance(s) with the turtles' heading
direction.
}
\details{
If the \code{NLworlds} object is wrapped (\code{torus = TRUE}) and the
         distance to move lead a turtle outside of the world's extent, it is
         relocated on the other side of the world, inside the world's extent. If
         \code{torus = FALSE} and \code{out = TRUE}, the turtle moves past the
         world's extent. If \code{torus = FALSE} and \code{out = FALSE}, the
         turtle does not move at all. In the event that a turtle does not move,
         its previous coordinates are still updated with its position before
         running \code{fd()} (i.e., its current position).
         If a given \code{step} value is negative, then the turtle moves
         backward.
}
\examples{
w1 <- createNLworld(minPxcor = 0, maxPxcor = 4, minPycor = 0, maxPycor = 4)
w1[] <- runif(25)
t1 <- createOTurtles(world = w1, n = 10)

library(SpaDES)
clearPlot()
Plot(w1)
Plot(t1, addTo ="w1")

t1 <- fd(world = w1, turtles = t1, step = 1)
Plot(t1, addTo ="w1")


}
\author{
Sarah Bauduin
}
\references{
Wilensky, U. 1999. NetLogo. http://ccl.northwestern.edu/netlogo/.
            Center for Connected Learning and Computer-Based Modeling,
            Northwestern University. Evanston, IL.
}

