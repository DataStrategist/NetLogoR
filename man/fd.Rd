% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/turtle-functions.R
\docType{methods}
\name{fd}
\alias{fd}
\alias{fd,SpatialPointsDataFrame,numeric-method}
\alias{fd,agentMatrix,numeric-method}
\title{Move forward}
\usage{
fd(turtles, dist, world, torus = FALSE, out = TRUE)

\S4method{fd}{SpatialPointsDataFrame,numeric}(turtles, dist, world,
  torus = FALSE, out = TRUE)

\S4method{fd}{agentMatrix,numeric}(turtles, dist, world, torus = FALSE,
  out = TRUE)
}
\arguments{
\item{turtles}{SpatialPointsDataFrame created by \code{createTurtles()} or
by \code{createOTurtles()} representing the moving agents.}

\item{dist}{Numeric. Vector of distances to move. Must
be of length 1 or of length \code{turtles}.}

\item{world}{NLworlds object.}

\item{torus}{Logical to determine if the \code{world} is wrapped. Default is
\code{torus = FALSE}.}

\item{out}{Logical. Determine if a turtle should move when
\code{torus = FALSE} and its ending position will be outside of
the \code{world}'s extent. Default is \code{out = TRUE}.}
}
\value{
SpatialPointsDataFrame representing the \code{turtles} with updated
        coordinates and updated data for their previous coordinates "prevX"
        and "prevY".
}
\description{
Move the \code{turtles} forward with their headings as directions.
}
\details{
If \code{torus = FALSE} and \code{out = TRUE}, \code{world}
         does not need to be provided.

         If a distance to move leads a turtle outside of the \code{world}'s extent
         and \code{torus = TRUE}, the turtle is
         relocated on the other side of the \code{world}, inside its extent; if
         \code{torus = FALSE} and \code{out = TRUE}, the turtle moves past the
         \code{world}'s extent; if \code{torus = FALSE} and \code{out = FALSE}, the
         turtle does not move at all. In the event that a turtle does not move,
         its previous coordinates are still updated with its position before
         running \code{fd()} (i.e., its current position).

         If a given \code{dist} value is negative, then the turtle moves
         backward.
}
\examples{
w1 <- createNLworld(minPxcor = 0, maxPxcor = 4, minPycor = 0, maxPycor = 4)
w1 <- set(world = w1, agents = patches(w1), val = runif(NLcount(patches(w1))))
t1 <- createOTurtles(world = w1, n = 10)

#clearPlot()
#Plot(w1)
#Plot(t1, addTo ="w1")

t1 <- fd(turtles = t1, dist = 1)
#Plot(t1, addTo ="w1")

}
\author{
Sarah Bauduin
}
\references{
Wilensky, U. 1999. NetLogo. http://ccl.northwestern.edu/netlogo/.
            Center for Connected Learning and Computer-Based Modeling,
            Northwestern University. Evanston, IL.
}
\seealso{
\url{https://ccl.northwestern.edu/netlogo/docs/dictionary.html#forward}

         \url{https://ccl.northwestern.edu/netlogo/docs/dictionary.html#jump}
}

