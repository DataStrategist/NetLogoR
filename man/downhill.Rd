% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/turtle-functions.R
\docType{methods}
\name{downhill}
\alias{downhill}
\alias{downhill,NLworld,missing,SpatialPointsDataFrame,numeric-method}
\alias{downhill,NLworldStack,character,SpatialPointsDataFrame,numeric-method}
\title{Downhill}
\usage{
downhill(world, pVar, turtles, nNeighbors, torus = FALSE)

\S4method{downhill}{NLworld,missing,SpatialPointsDataFrame,numeric}(world,
  turtles, nNeighbors, torus)


  \S4method{downhill}{NLworldStack,character,SpatialPointsDataFrame,numeric}(world,
  pVar, turtles, nNeighbors, torus = FALSE)
}
\arguments{
\item{world}{A \code{NLworlds} object, representing the world in which the
turtles move onto.}

\item{pVar}{If the world is a \code{NLworldStack}, pVar is the name
(characters) of the layer used to define the patches's variable
used to move downihll.}

\item{turtles}{A SpatialPointsDataFrame created by \code{createTurtles()} or
by \code{createOTurtles()} representing the moving turtles.}

\item{nNeighbors}{4 or 8 for the number of neighbor patches considered to move
downhill.}

\item{torus}{Logical to determine if the \code{NLworlds} object is wrapped.
Default is \code{torus = FALSE}.}
}
\value{
A SpatialPointsDataFrame representing the turtles with updated locations
        and headings.
}
\description{
Move the turtles to their neighboring patch with the lowest value for the pacthes'
variable.
}
\details{
The turtles face the chosen patches and then move to their center. Both
         headings and locations are updated with \code{downhill}.
         If no neighboring patch has a smaller value than the patch where the
         turtle is currently located, the turtle stays on this patch. It still
         moves to the patch center if it was not already on it.
         If there are multiple neighboring patches with the same lowest value,
         the turtle chooses one patch at random.
         If \code{torus = FALSE}, turtles cannot move on the other side of the world.
         If a turtle is located on a patch on the edge of the world, it has fewer
         neighborhing patches for option to move than \code{nNeighbors}. If
         \code{torus = TRUE}, turtles can move on the other side of the world to
         go downhill and their choice of neighborhing patches is always among
         \code{nNeighbors} patches.
}
\examples{
w1 <- createNLworld(minPxcor = 1, maxPxcor = 10, minPycor = 1, maxPycor = 10)
w1[] <- runif(100)
t1 <- createTurtles(world = w1, n = 10, coords = cbind(xcor = randomXcor(world = w1, n = 10),
                                                       ycor = randomYcor(world = w1, n = 10)))
plot(w1)
points(t1, pch = 16, col = t1@data$color)
t1 <- downhill(world = w1, turtles = t1, nNeighbors = 8)
points(t1, pch = 16, col = t1@data$color)


}
\author{
Sarah Bauduin
}
\references{
Wilensky, U. 1999. NetLogo. http://ccl.northwestern.edu/netlogo/.
            Center for Connected Learning and Computer-Based Modeling,
            Northwestern University. Evanston, IL.
}

